{"ast":null,"code":"var _jsxFileName = \"/Users/gupark/Desktop/Groomthon_Training_week1/react_neflix_clone/src/components/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from '../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row({\n  isLargeRow,\n  title,\n  id,\n  fetchUrl\n}) {\n  _s();\n  //영화들 담을 State\n  const [movies, setMovies] = useState([]);\n\n  //컴포넌트가 렌더링 될 때 마다 작업을 반복하게 해주는 hook\n  useEffect(() => {\n    // 새로 렌더링 되면 영화 데이터를 새로 가져온다\n    fetchMovieData();\n  }, []);\n\n  // 비동기로 tmdb API를 사용해 영화 데이터 get\n  const fetchMovieData = async () => {\n    const request = await axios.get(fetchUrl);\n    //가져온 데이터는 movies state로\n    setMovies(request.data.results);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__arrow-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"arrow\",\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), \" //\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Row","isLargeRow","title","id","fetchUrl","_s","movies","setMovies","fetchMovieData","request","get","data","results","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/gupark/Desktop/Groomthon_Training_week1/react_neflix_clone/src/components/Row.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport axios from '../api/axios';\n\nexport default function Row ({isLargeRow, title, id, fetchUrl}) {\n    //영화들 담을 State\n    const [movies, setMovies] = useState([]);\n\n    //컴포넌트가 렌더링 될 때 마다 작업을 반복하게 해주는 hook\n    useEffect(() => {\n        // 새로 렌더링 되면 영화 데이터를 새로 가져온다\n      fetchMovieData();\n    }, []);\n\n    // 비동기로 tmdb API를 사용해 영화 데이터 get\n    const fetchMovieData = async () => {\n        const request = await axios.get(fetchUrl);\n        //가져온 데이터는 movies state로\n        setMovies(request.data.results);\n    }\n    \n  return (\n    <section>\n        <h2>{title}</h2>\n        <div className='slider'>\n            <div className='slider__arrow-left'>\n                <span className= \"arrow\">{\"<\"}</span> //\n            </div>\n        </div>\n    </section>\n  )\n}\n "],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,GAAGA,CAAE;EAACC,UAAU;EAAEC,KAAK;EAAEC,EAAE;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC5D;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACAD,SAAS,CAAC,MAAM;IACZ;IACFa,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACN,QAAQ,CAAC;IACzC;IACAG,SAAS,CAACE,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;EACnC,CAAC;EAEH,oBACEb,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAKX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBlB,OAAA;MAAKmB,SAAS,EAAC,QAAQ;MAAAL,QAAA,eACnBd,OAAA;QAAKmB,SAAS,EAAC,oBAAoB;QAAAL,QAAA,gBAC/Bd,OAAA;UAAMmB,SAAS,EAAE,OAAO;UAAAL,QAAA,EAAE;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,OACzC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACZ,EAAA,CA3BuBL,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}