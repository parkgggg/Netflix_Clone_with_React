{"ast":null,"code":"var _jsxFileName = \"/Users/gupark/Desktop/Groomthon_Training_week1/react_neflix_clone/src/components/Banner.js\",\n  _s = $RefreshSig$();\n//axios 기본 제공 모듈이 아니라, 직접 정의한 것을 불러와야됨\nimport axios from \"../api/axios\";\nimport React, { useState, useEffect } from \"react\";\nimport requests from \"../api/requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Banner() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    //현재 상영중인 영화 정보 가져오기(여러 영화) - \n    const request = await axios.get(requests.fetchNowPlaying);\n    console.log(request);\n    const movieId = request.data.results[\n    //Math.random => 0~1 사이의 무작위값, Math.floor => 내림 함수(작거나 같은 것 중 가장 큰 정수 반환)\n    // 0~가져온 영화 수 사이의 랜덤 정수 \n    Math.floor(Math.random() * request.data.results.length)].id;\n    const {\n      data: movieDetail\n    } = await axios.get(`movie/${movieId}`, {\n      params: {\n        append_to_response: \"video\"\n      }\n    });\n    setMovie(movieDetail);\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"banner\",\n    style: {\n      backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\n      backgroundPosition: \"top center\",\n      backgroundSize: \"cover\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner__contents\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"banner__title\",\n        children: (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.original_name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner__buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"banner__button play\",\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"banner__button info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), \" More Information\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"banner__description\",\n        children: movie === null || movie === void 0 ? void 0 : movie.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner--fadeBottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Banner, \"jmRb9xsBKsoKCGHCjtfP3JDQESc=\");\n_c = Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["axios","React","useState","useEffect","requests","jsxDEV","_jsxDEV","Banner","_s","movie","setMovie","fetchData","request","get","fetchNowPlaying","console","log","movieId","data","results","Math","floor","random","length","id","movieDetail","params","append_to_response","className","style","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","children","title","name","original_name","fileName","_jsxFileName","lineNumber","columnNumber","overview","_c","$RefreshReg$"],"sources":["/Users/gupark/Desktop/Groomthon_Training_week1/react_neflix_clone/src/components/Banner.js"],"sourcesContent":["//axios 기본 제공 모듈이 아니라, 직접 정의한 것을 불러와야됨\nimport axios from \"../api/axios\";\nimport React, { useState, useEffect } from \"react\";\nimport requests from \"../api/requests\";\n\nexport default function Banner() {\n    const [movie, setMovie] = useState([]);\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    const fetchData = async () => {\n        //현재 상영중인 영화 정보 가져오기(여러 영화) - \n        const request = await axios.get(requests.fetchNowPlaying);\n        console.log(request);\n        const movieId = request.data.results[\n            //Math.random => 0~1 사이의 무작위값, Math.floor => 내림 함수(작거나 같은 것 중 가장 큰 정수 반환)\n            // 0~가져온 영화 수 사이의 랜덤 정수 \n            Math.floor(Math.random() * request.data.results.length)\n        ].id;\n\n        const { data: movieDetail } = await axios.get(`movie/${movieId}`, {params: {append_to_response: \"video\"}, });\n        setMovie(movieDetail);\n    }\n\n  return (\n    <header\n        className=\"banner\"\n        style={{\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\n            backgroundPosition: \"top center\",\n            backgroundSize: \"cover\"\n        }}\n        >\n            <div className=\"banner__contents\">\n                <h1 className=\"banner__title\">\n                    {movie?.title || movie?.name || movie?.original_name}\n                </h1>\n                <div className=\"banner__buttons\">\n                    <button\n                        className=\"banner__button play\"\n                    >                        \n                        Play\n                    </button>\n                    <button\n                        className=\"banner__button info\"\n                    >\n                        <div className=\"space\"></div> More Information\n                    </button>\n                </div>\n                {/* 요약 설명 */}\n                <h1 className=\"banner__description\">\n                    {movie?.overview}\n                </h1>\n            </div>\n        <div className=\"banner--fadeBottom\"/>\n    </header>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}