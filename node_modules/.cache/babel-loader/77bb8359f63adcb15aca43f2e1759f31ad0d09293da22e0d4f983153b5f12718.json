{"ast":null,"code":"var _jsxFileName = \"/Users/gupark/Desktop/Groomthon_Training_week1/react_neflix_clone/src/pages/SearchPage/index.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"../../api/axios\";\nimport \"./SearchPage.css\";\nimport { useDebounce } from \"../../hooks/useDebounce\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchPage() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [searchResults, setSearchResults] = useState([]); // 검색 결과 담을 state\n\n  const useQuery = () => {\n    _s();\n    //쿼리 스트링 조작용 객체 함수 => useLocation()(=현재 페이지 위치 정보).search(=현재 페이지 url의 쿼리 스트링))\n    return new URLSearchParams(useLocation().search);\n  };\n  _s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n    return [useLocation];\n  });\n  let query = useQuery();\n  //const searchTerm = query.get(\"q\");\n  //검색어에 디바운싱 적용\n  const debouncedSearchTerm = useDebounce(query.get(\"q\"), 500);\n  useEffect(() => {\n    //searchTerm state가 업데이트 되면 실행\n    if (debouncedSearchTerm) {\n      //검색하려는 값이 존재하면\n      fetchSearchMovie(debouncedSearchTerm);\n    }\n  }, [debouncedSearchTerm]);\n  const fetchSearchMovie = async debouncedSearchTerm => {\n    //searchTerm에 대한 영화 정보를 요청\n    try {\n      const request = await axios.get(`/search/multi?include_adult=false&query=${debouncedSearchTerm}`);\n      setSearchResults(request.data.results); //가져온 영화 정보 searchResults에 저장, 정보 없으면 에러 출력\n      console.log(searchResults);\n    } catch (e) {\n      console.log(\"error\", e);\n    }\n  };\n\n  //검색 결과 존재 유무에 따라서 다른 JSX 반환\n  const renderSearchResults = () => {\n    return searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"search-container\",\n      children: searchResults.map(movie => {\n        // 검색한 결과들로부터 이미지(back_drop) 가져오기 (media_type = person은 인물 정보 데이터를 이야기하는 듯)\n        if (movie.backdrop_path !== null && movie.media_type !== \"person\") {\n          const movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.backdrop_path;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClickclassName: \"movie__column-poster\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: movieImageUrl,\n                alt: \"\",\n                className: \"movie_poster\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"no-results\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results__text\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your search for \\\"\", debouncedSearchTerm, \"\\\" did not have any matches.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Suggestion:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Try different keywords\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  };\n  return renderSearchResults();\n}\n_s2(SearchPage, \"RZF9D6CdnQ+zPz/vY1c2R7RQwy8=\", true, function () {\n  return [useDebounce];\n});\n_c = SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","useDebounce","jsxDEV","_jsxDEV","SearchPage","_s2","_s","$RefreshSig$","searchResults","setSearchResults","useQuery","URLSearchParams","search","query","debouncedSearchTerm","get","fetchSearchMovie","request","data","results","console","log","e","renderSearchResults","length","className","children","map","movie","backdrop_path","media_type","movieImageUrl","onClickclassName","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/gupark/Desktop/Groomthon_Training_week1/react_neflix_clone/src/pages/SearchPage/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"../../api/axios\";\nimport \"./SearchPage.css\"\nimport { useDebounce } from \"../../hooks/useDebounce\";\n\nexport default function SearchPage() {\n  const [searchResults, setSearchResults] = useState([]); // 검색 결과 담을 state\n\n  const useQuery = () => {\n    //쿼리 스트링 조작용 객체 함수 => useLocation()(=현재 페이지 위치 정보).search(=현재 페이지 url의 쿼리 스트링))\n    return new URLSearchParams(useLocation().search);\n  };\n\n  let query = useQuery();\n  //const searchTerm = query.get(\"q\");\n  //검색어에 디바운싱 적용\n  const debouncedSearchTerm = useDebounce(query.get(\"q\"), 500)\n  \n  useEffect(() => {\n    //searchTerm state가 업데이트 되면 실행\n    if (debouncedSearchTerm) {\n      //검색하려는 값이 존재하면\n      fetchSearchMovie(debouncedSearchTerm);\n    }\n  }, [debouncedSearchTerm]);\n\n  const fetchSearchMovie = async (debouncedSearchTerm) => {\n    //searchTerm에 대한 영화 정보를 요청\n    try {\n      const request = await axios.get(\n        `/search/multi?include_adult=false&query=${debouncedSearchTerm}`\n      );\n      setSearchResults(request.data.results); //가져온 영화 정보 searchResults에 저장, 정보 없으면 에러 출력\n      console.log(searchResults)\n    } catch (e) {\n      console.log(\"error\", e);\n    }\n  };\n\n  //검색 결과 존재 유무에 따라서 다른 JSX 반환\n  const renderSearchResults = () => {\n    return searchResults.length > 0 ? (\n      <section className=\"search-container\">\n        {searchResults.map((movie) => { // 검색한 결과들로부터 이미지(back_drop) 가져오기 (media_type = person은 인물 정보 데이터를 이야기하는 듯)\n          if (movie.backdrop_path !== null && movie.media_type !== \"person\") {\n            const movieImageUrl =\n              \"https://image.tmdb.org/t/p/w500\" + movie.backdrop_path;\n\n            return (\n              <div className=\"movie\" key={movie.id}>\n                <div onClickclassName=\"movie__column-poster\">\n                  <img src={movieImageUrl} alt=\"\" className=\"movie_poster\" />\n                </div>\n              </div>\n            );\n          }\n        })}\n      </section>\n    ) : (\n      <section className=\"no-results\">\n        <div className=\"no-results__text\">\n            <p>\n                Your search for \"{debouncedSearchTerm}\" did not have any matches.\n            </p>\n            <p>\n                Suggestion:\n            </p>\n            <ul>\n                <li>\n                    Try different keywords\n                </li>\n            </ul>\n        </div>\n      </section>\n    );\n  };\n\n  return renderSearchResults();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}