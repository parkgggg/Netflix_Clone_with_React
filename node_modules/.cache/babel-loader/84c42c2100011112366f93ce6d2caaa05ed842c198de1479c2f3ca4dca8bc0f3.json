{"ast":null,"code":"var _jsxFileName = \"/Users/gupark/Desktop/Groomthon_Training_week1/react_neflix_clone/src/pages/SearchPage/index.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from '../../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SearchPage() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [searchResults, setSearchResults] = useState([]); // 검색 결과 담을 state\n\n  const useQuery = () => {\n    _s();\n    return new URLSearchParams(useLocation().search);\n  };\n  _s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n    return [useLocation];\n  });\n  let query = useQuery();\n  const searchTerm = query.get(\"q\");\n  useEffect(() => {\n    //searchTerm state가 업데이트 되면 실행\n    if (searchTerm) {\n      //검색하려는 값이 존재하면\n      fetchSearchMovie(searchTerm);\n    }\n  }, [searchTerm]);\n  const fetchSearchMovie = async searchTerm => {\n    //searchTerm에 대한 영화 정보를 요청\n    try {\n      const request = await axios.get(`/search/multi?include_adult=false&query=${searchTerm}`);\n      setSearchResults(request.data.results); //가져온 영화 정보 searchResults에 저장, 정보 없으면 에러 출력\n    } catch (e) {\n      console.log(\"error\", e);\n    }\n  };\n\n  //검색 결과 존재 유무에 따라서 다른 JSX 반환\n  const renderSearchResults = () => {\n    return searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"search-container\",\n      children: searchResults.map(movie => {\n        if (movie.backdrop_path !== null && movie.media_type !== \"person\") {\n          const movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.backdrop_path;\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie__column-poster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"SearchPage\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s2(SearchPage, \"lsB6FxWFYFLtWP+Q6PcC57+x7wM=\", true);\n_c = SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchPage","_s2","_s","$RefreshSig$","searchResults","setSearchResults","useQuery","URLSearchParams","search","query","searchTerm","get","fetchSearchMovie","request","data","results","e","console","log","renderSearchResults","length","className","children","map","movie","backdrop_path","media_type","movieImageUrl","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gupark/Desktop/Groomthon_Training_week1/react_neflix_clone/src/pages/SearchPage/index.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useLocation} from 'react-router-dom';\nimport axios from '../../api/axios';\n\nexport default function SearchPage() {\n    const [searchResults, setSearchResults] = useState([]); // 검색 결과 담을 state\n\n    const useQuery = () => {\n        return new URLSearchParams(useLocation().search);\n    };\n\n    let query = useQuery();\n    const searchTerm = query.get(\"q\");\n    \n    useEffect(() => { //searchTerm state가 업데이트 되면 실행\n      if (searchTerm) { //검색하려는 값이 존재하면\n        fetchSearchMovie(searchTerm);\n      }\n    }, [searchTerm])\n    \n    const fetchSearchMovie  = async (searchTerm) => { //searchTerm에 대한 영화 정보를 요청\n        try {\n            const request = await axios.get(`/search/multi?include_adult=false&query=${searchTerm}`)\n            setSearchResults(request.data.results) //가져온 영화 정보 searchResults에 저장, 정보 없으면 에러 출력\n        } catch (e) {\n            console.log(\"error\", e)\n        }\n    }\n\n    //검색 결과 존재 유무에 따라서 다른 JSX 반환\n    const renderSearchResults = () =>{\n        return searchResults.length > 0 ? (\n            <section className='search-container'>\n                {searchResults.map((movie) => {\n                    if (movie.backdrop_path !== null && movie.media_type !== \"person\") {\n                        const movieImageUrl =\"https://image.tmdb.org/t/p/w500\" + movie.backdrop_path;\n                    }\n                    return (\n                        <div className='movie'>\n                            <div className='movie__column-poster'>\n\n                            </div>\n\n                        </div>\n                    )\n                })}\n                \n            </section>\n        ): (<></>);\n    }\n\n  return (  \n    <div>SearchPage</div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACjC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExD,MAAMc,QAAQ,GAAGA,CAAA,KAAM;IAAAJ,EAAA;IACnB,OAAO,IAAIK,eAAe,CAACb,WAAW,CAAC,CAAC,CAACc,MAAM,CAAC;EACpD,CAAC;EAACN,EAAA,CAFII,QAAQ;IAAA,QACiBZ,WAAW;EAAA;EAG1C,IAAIe,KAAK,GAAGH,QAAQ,CAAC,CAAC;EACtB,MAAMI,UAAU,GAAGD,KAAK,CAACE,GAAG,CAAC,GAAG,CAAC;EAEjClB,SAAS,CAAC,MAAM;IAAE;IAChB,IAAIiB,UAAU,EAAE;MAAE;MAChBE,gBAAgB,CAACF,UAAU,CAAC;IAC9B;EACF,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAME,gBAAgB,GAAI,MAAOF,UAAU,IAAK;IAAE;IAC9C,IAAI;MACA,MAAMG,OAAO,GAAG,MAAMlB,KAAK,CAACgB,GAAG,CAAE,2CAA0CD,UAAW,EAAC,CAAC;MACxFL,gBAAgB,CAACQ,OAAO,CAACC,IAAI,CAACC,OAAO,CAAC,EAAC;IAC3C,CAAC,CAAC,OAAOC,CAAC,EAAE;MACRC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,CAAC,CAAC;IAC3B;EACJ,CAAC;;EAED;EACA,MAAMG,mBAAmB,GAAGA,CAAA,KAAK;IAC7B,OAAOf,aAAa,CAACgB,MAAM,GAAG,CAAC,gBAC3BvB,OAAA;MAASwB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAChClB,aAAa,CAACmB,GAAG,CAAEC,KAAK,IAAK;QAC1B,IAAIA,KAAK,CAACC,aAAa,KAAK,IAAI,IAAID,KAAK,CAACE,UAAU,KAAK,QAAQ,EAAE;UAC/D,MAAMC,aAAa,GAAE,iCAAiC,GAAGH,KAAK,CAACC,aAAa;QAChF;QACA,oBACI5B,OAAA;UAAKwB,SAAS,EAAC,OAAO;UAAAC,QAAA,eAClBzB,OAAA;YAAKwB,SAAS,EAAC;UAAsB;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEhC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEL,CAAC;MAEd,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEG,CAAC,gBACVlC,OAAA,CAAAE,SAAA,mBAAI,CAAE;EACd,CAAC;EAEH,oBACEF,OAAA;IAAAyB,QAAA,EAAK;EAAU;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEzB;AAAC9B,GAAA,CAlDuBD,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}