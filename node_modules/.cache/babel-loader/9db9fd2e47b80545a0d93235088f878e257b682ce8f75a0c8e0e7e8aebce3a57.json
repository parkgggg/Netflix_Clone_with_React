{"ast":null,"code":"var _jsxFileName = \"/Users/gupark/Desktop/Groomthon_Training_week1/react_neflix_clone/src/components/Banner.js\",\n  _s = $RefreshSig$();\n//axios 기본 제공 모듈이 아니라, 직접 정의한 것을 불러와야됨\nimport axios from \"../api/axios\";\nimport React, { useState, useEffect } from \"react\";\nimport requests from \"../api/requests\";\nimport \"./Banner.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Banner() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  const [isClicked, setIsClicked] = useState(false);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    //현재 상영중인 영화 정보 가져오기(여러 영화) - \n    const request = await axios.get(requests.fetchNowPlaying);\n    console.log(request);\n    const movieId = request.data.results[\n    //Math.random => 0~1 사이의 무작위값, Math.floor => 내림 함수(작거나 같은 것 중 가장 큰 정수 반환)\n    // 0~가져온 영화 수 사이의 랜덤 정수 \n    Math.floor(Math.random() * request.data.results.length)].id;\n    const {\n      data: movieDetail\n    } = await axios.get(`movie/${movieId}`, {\n      params: {\n        append_to_response: \"video\"\n      }\n    });\n    setMovie(movieDetail);\n  };\n  //일반 배너 화면 (Play 버튼 클릭 안 되었을 때)\n  if (!isClicked) {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"banner\",\n      style: {\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\n        backgroundPosition: \"top center\",\n        backgroundSize: \"cover\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner__contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner__title\",\n          children: (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.original_name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"banner__buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner__button play\",\n            onClick: () => setIsClicked(true),\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner__button info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), \" More Information\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner__description\",\n          children: movie === null || movie === void 0 ? void 0 : movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner--fadeBottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this);\n  } else {}\n}\n_s(Banner, \"R9stJPTA5NGL+iZVozDaQaKtmNg=\");\n_c = Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["axios","React","useState","useEffect","requests","jsxDEV","_jsxDEV","Banner","_s","movie","setMovie","isClicked","setIsClicked","fetchData","request","get","fetchNowPlaying","console","log","movieId","data","results","Math","floor","random","length","id","movieDetail","params","append_to_response","className","style","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","children","title","name","original_name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","overview","_c","$RefreshReg$"],"sources":["/Users/gupark/Desktop/Groomthon_Training_week1/react_neflix_clone/src/components/Banner.js"],"sourcesContent":["//axios 기본 제공 모듈이 아니라, 직접 정의한 것을 불러와야됨\nimport axios from \"../api/axios\";\nimport React, { useState, useEffect } from \"react\";\nimport requests from \"../api/requests\";\nimport \"./Banner.css\"\n\nexport default function Banner() {\n    const [movie, setMovie] = useState([]);\n    const [isClicked, setIsClicked] = useState(false);\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    const fetchData = async () => {\n        //현재 상영중인 영화 정보 가져오기(여러 영화) - \n        const request = await axios.get(requests.fetchNowPlaying);\n        console.log(request);\n        const movieId = request.data.results[\n            //Math.random => 0~1 사이의 무작위값, Math.floor => 내림 함수(작거나 같은 것 중 가장 큰 정수 반환)\n            // 0~가져온 영화 수 사이의 랜덤 정수 \n            Math.floor(Math.random() * request.data.results.length)\n        ].id;\n\n        const { data: movieDetail } = await axios.get(`movie/${movieId}`, {params: {append_to_response: \"video\"}, });\n        setMovie(movieDetail);\n    }\n//일반 배너 화면 (Play 버튼 클릭 안 되었을 때)\nif (!isClicked){\n    return (\n        <header\n            className=\"banner\"\n            style={{\n                backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\n                backgroundPosition: \"top center\",\n                backgroundSize: \"cover\"\n            }}\n            >\n                <div className=\"banner__contents\">\n                    <h1 className=\"banner__title\">\n                        {movie?.title || movie?.name || movie?.original_name}\n                    </h1>\n                    <div className=\"banner__buttons\">\n                        {/* 버튼 두 개 (Play, Decription}*/}\n                        <button\n                            className=\"banner__button play\"\n                            onClick={()=>setIsClicked(true)}\n                        >                        \n                            Play\n                        </button>\n                        <button\n                            className=\"banner__button info\"\n                        >\n                            <div className=\"space\"></div> More Information\n                        </button>\n                    </div>\n                    {/* 요약 설명 */}\n                    <h1 className=\"banner__description\">\n                        {movie?.overview}\n                    </h1>\n                </div>\n            <div className=\"banner--fadeBottom\"/>\n        </header>\n      );\n\n\n} else {\n\n}\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}