{"ast":null,"code":"var _jsxFileName = \"/Users/gupark/Desktop/Groomthon_Training_week1/react_neflix_clone/src/pages/DetailPage/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useParams, useState } from \"react-router-dom\";\nimport axios from \"../../api/axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DetailPage() {\n  _s();\n  // 라우팅할 때 속성 값들 중 정의된 다이나믹 경로 세그먼트들을 넘겨받은 페이지에서 사용할 수 있게 해줌.\n  // 간단하게 말하면 라우팅 시 :stlye 문법이 path 속성에서 사용되었다면 : 뒤의 값들을 파라미터로 넘겨받음\n  //여기선 movieId (App.js의 <Route path=\":movieId\" element={<DetailePage/>}/>)\n  //useParams()는 객체로 반환되기 때문에 여러 개의 값이 안에 들어있을 수 있음. So, \"객체.파리미터명\" 형태로 호출 (하나일 땐, 노 상관)\n  const {\n    movieId\n  } = useParams();\n\n  //선택된 영화 정보를 담는 state\n  const [movies, setMovies] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}`);\n      setMovies(request.data);\n    }\n    fetchData();\n  }, [movieId]);\n  if (!movies) return null;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"modal_poster-img\",\n      src: `https://image.tmdb.org/t/p/original/${movies.backdrop_path}`,\n      alt: \"modal_poster-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(DetailPage, \"h5mnIOGOvwLmznXVhZob4NlTAKE=\", false, function () {\n  return [useParams];\n});\n_c = DetailPage;\nvar _c;\n$RefreshReg$(_c, \"DetailPage\");","map":{"version":3,"names":["React","useEffect","useParams","useState","axios","jsxDEV","_jsxDEV","DetailPage","_s","movieId","movies","setMovies","fetchData","request","get","data","children","className","src","backdrop_path","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gupark/Desktop/Groomthon_Training_week1/react_neflix_clone/src/pages/DetailPage/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useParams, useState } from \"react-router-dom\";\nimport axios from \"../../api/axios\";\n\nexport default function DetailPage() {\n\n  // 라우팅할 때 속성 값들 중 정의된 다이나믹 경로 세그먼트들을 넘겨받은 페이지에서 사용할 수 있게 해줌.\n  // 간단하게 말하면 라우팅 시 :stlye 문법이 path 속성에서 사용되었다면 : 뒤의 값들을 파라미터로 넘겨받음\n  //여기선 movieId (App.js의 <Route path=\":movieId\" element={<DetailePage/>}/>)\n  //useParams()는 객체로 반환되기 때문에 여러 개의 값이 안에 들어있을 수 있음. So, \"객체.파리미터명\" 형태로 호출 (하나일 땐, 노 상관)\n  const { movieId } = useParams();\n\n  //선택된 영화 정보를 담는 state\n  const [movies, setMovies] = useState({});\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}`\n      );\n      setMovies(request.data);\n    }\n    fetchData();\n  }, [movieId]);\n\n  if (!movies) return null;\n\n  return (\n    <section>\n        <img \n        className=\"modal_poster-img\"\n        src={`https://image.tmdb.org/t/p/original/${movies.backdrop_path}`}\n        alt=\"modal_poster-img\"\n        />\n    </section>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,kBAAkB;AACtD,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEnC;EACA;EACA;EACA;EACA,MAAM;IAAEC;EAAQ,CAAC,GAAGP,SAAS,CAAC,CAAC;;EAE/B;EACA,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExCF,SAAS,CAAC,MAAM;IACd,eAAeW,SAASA,CAAA,EAAG;MACzB,MAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC5B,sCAAqCL,OAAQ,EAChD,CAAC;MACDE,SAAS,CAACE,OAAO,CAACE,IAAI,CAAC;IACzB;IACAH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;EAEb,IAAI,CAACC,MAAM,EAAE,OAAO,IAAI;EAExB,oBACEJ,OAAA;IAAAU,QAAA,eACIV,OAAA;MACAW,SAAS,EAAC,kBAAkB;MAC5BC,GAAG,EAAG,uCAAsCR,MAAM,CAACS,aAAc,EAAE;MACnEC,GAAG,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEd;AAAChB,EAAA,CAhCuBD,UAAU;EAAA,QAMZL,SAAS;AAAA;AAAAuB,EAAA,GANPlB,UAAU;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}