{"ast":null,"code":"var _jsxFileName = \"/Users/gupark/Desktop/Groomthon_Training_week1/react_neflix_clone/src/components/Banner.js\",\n  _s = $RefreshSig$();\n//axios 기본 제공 모듈이 아니라, 직접 정의한 것을 불러와야됨\nimport axios from \"../api/axios\";\nimport React, { useState, useEffect } from \"react\";\nimport requests from \"../api/requests\";\n\n//Style Component => JS에서 CSS 처리가 가능하게 해주는 라이브러리\nimport styled from \"styled-components\";\nimport \"./Banner.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Banner() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  const [isClicked, setIsClicked] = useState(false);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    //현재 상영중인 영화 정보 가져오기(여러 영화) -\n    const request = await axios.get(requests.fetchNetflixOriginals);\n    console.log(request);\n    const movieId = request.data.results[\n    //Math.random => 0~1 사이의 무작위값, Math.floor => 내림 함수(작거나 같은 것 중 가장 큰 정수 반환)\n    // 0~가져온 영화 수 사이의 랜덤 정수\n    Math.floor(Math.random() * request.data.results.length)].id;\n    const {\n      data: movieDetail\n    } = await axios.get(`movie/${movieId}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    });\n    setMovie(movieDetail);\n    console.log(movie);\n  };\n\n  //문자열 길이가 n보다 길면 n+1부터는 ...으로 대체\n  const truncate = (str, n) => {\n    return (str === null || str === void 0 ? void 0 : str.length) > n ? str.substr(0, n - 1) + \"...\" : str;\n  };\n\n  //일반 배너 화면 (Play 버튼 클릭 안 되었을 때)\n  console.log(movie);\n  if (!isClicked) {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"banner\",\n      style: {\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\n        backgroundPosition: \"top center\",\n        backgroundSize: \"cover\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner__contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner__title\",\n          children: (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.original_name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"banner__buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner__button play\",\n            onClick: () => setIsClicked(true),\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner__button info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), \" More Information\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner__description\",\n          children: truncate(movie.overview, 100)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner--fadeBottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  } else {\n    //비디오 재생 화면 Play 버튼 클릭 되었을 때,\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(HomeContainer, {\n        children: /*#__PURE__*/_jsxDEV(Iframe, {\n          width: \"640\",\n          height: \"360\",\n          src: `https://www.youtube.com/embed/${movie.videos.results[0].key}?controls=0&autoplay=1&loop=1&mute=1&playlist=$\\${movie.videos.results[0].key}`,\n          title: \"YouTube video player\",\n          frameborder: \"0\",\n          allow: \"autoplay; fullscreen\",\n          allowfullscreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this);\n  }\n}\n_s(Banner, \"R9stJPTA5NGL+iZVozDaQaKtmNg=\");\n_c = Banner;\nconst Iframe = styled.iframe`\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n    opacity: 0.65;\n    border: none;\n\n    &::after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n    }\n`;\n_c2 = Iframe;\nconst Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    width: 100%;\n    height: 100vh;\n`;\n_c3 = Container;\nconst HomeContainer = styled.div`\n    width: 100%;\n    height: 100%;\n`;\n_c4 = HomeContainer;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Banner\");\n$RefreshReg$(_c2, \"Iframe\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"HomeContainer\");","map":{"version":3,"names":["axios","React","useState","useEffect","requests","styled","jsxDEV","_jsxDEV","Banner","_s","movie","setMovie","isClicked","setIsClicked","fetchData","request","get","fetchNetflixOriginals","console","log","movieId","data","results","Math","floor","random","length","id","movieDetail","params","append_to_response","truncate","str","n","substr","className","style","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","children","title","name","original_name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","overview","Container","HomeContainer","Iframe","width","height","src","videos","key","frameborder","allow","allowfullscreen","_c","iframe","_c2","div","_c3","_c4","$RefreshReg$"],"sources":["/Users/gupark/Desktop/Groomthon_Training_week1/react_neflix_clone/src/components/Banner.js"],"sourcesContent":["//axios 기본 제공 모듈이 아니라, 직접 정의한 것을 불러와야됨\nimport axios from \"../api/axios\";\nimport React, { useState, useEffect } from \"react\";\nimport requests from \"../api/requests\";\n\n//Style Component => JS에서 CSS 처리가 가능하게 해주는 라이브러리\nimport styled from \"styled-components\"\nimport \"./Banner.css\";\n\nexport default function Banner() {\n  const [movie, setMovie] = useState([]);\n  const [isClicked, setIsClicked] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    //현재 상영중인 영화 정보 가져오기(여러 영화) -\n    const request = await axios.get(requests.fetchNetflixOriginals);\n    console.log(request);\n    const movieId =\n      request.data.results[\n        //Math.random => 0~1 사이의 무작위값, Math.floor => 내림 함수(작거나 같은 것 중 가장 큰 정수 반환)\n        // 0~가져온 영화 수 사이의 랜덤 정수\n        Math.floor(Math.random() * request.data.results.length)\n      ].id;\n\n    const { data: movieDetail } = await axios.get(`movie/${movieId}`, {\n      params: { append_to_response: \"videos\" },\n    });\n    setMovie(movieDetail);\n    console.log(movie)\n  };\n\n  //문자열 길이가 n보다 길면 n+1부터는 ...으로 대체\n  const truncate = (str, n) => {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  };\n\n  //일반 배너 화면 (Play 버튼 클릭 안 되었을 때)\n  console.log(movie)\n  if (!isClicked) {\n    return (\n      <header\n        className=\"banner\"\n        style={{\n          backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\n          backgroundPosition: \"top center\",\n          backgroundSize: \"cover\",\n        }}\n      >\n        <div className=\"banner__contents\">\n          <h1 className=\"banner__title\">\n            {movie?.title || movie?.name || movie?.original_name}\n          </h1>\n          <div className=\"banner__buttons\">\n            {/* 버튼 두 개 (Play, Decription}*/}\n            <button\n              className=\"banner__button play\"\n              onClick={() => setIsClicked(true)}\n            >\n              Play\n            </button>\n            <button className=\"banner__button info\">\n              <div className=\"space\"></div> More Information\n            </button>\n          </div>\n          {/* 요약 설명 */}\n          <h1 className=\"banner__description\">   \n            { /* 100자 이상이면 뒤는 생략 */ }\n            {truncate(movie.overview, 100)}\n          </h1>\n        </div>\n        <div className=\"banner--fadeBottom\" />\n      </header>\n    );\n  } else {\n    //비디오 재생 화면 Play 버튼 클릭 되었을 때,\n    return (\n        <Container>\n            <HomeContainer>\n            {/* */}\n            <Iframe\n            width=\"640\"\n            height=\"360\"\n            src={`https://www.youtube.com/embed/${movie.videos.results[0].key}?controls=0&autoplay=1&loop=1&mute=1&playlist=$\\${movie.videos.results[0].key}`}\n            title=\"YouTube video player\"\n            frameborder=\"0\"\n            allow=\"autoplay; fullscreen\"\n            allowfullscreen\n          ></Iframe>\n            </HomeContainer>\n        </Container>\n    )\n  }\n}\n\nconst Iframe = styled.iframe`\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n    opacity: 0.65;\n    border: none;\n\n    &::after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n    }\n`;\n\nconst Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    width: 100%;\n    height: 100vh;\n`;\n\nconst HomeContainer = styled.div`\n    width: 100%;\n    height: 100%;\n`;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}